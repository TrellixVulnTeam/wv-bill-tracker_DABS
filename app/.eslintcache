[{"/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/App.js":"1","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/index.js":"2","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Bill.js":"3","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Person.js":"4","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/utilities.js":"5","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Subject.js":"6","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/PersonBox.js":"7","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/BillBox.js":"8","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Committee.js":"9","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Agenda.js":"10"},{"size":13291,"mtime":1613672899091,"results":"11","hashOfConfig":"12"},{"size":5412,"mtime":1613677851143,"results":"13","hashOfConfig":"12"},{"size":10713,"mtime":1613708270365,"results":"14","hashOfConfig":"12"},{"size":3584,"mtime":1613592228764,"results":"15","hashOfConfig":"12"},{"size":4453,"mtime":1613687232378,"results":"16","hashOfConfig":"12"},{"size":622,"mtime":1612738767968,"results":"17","hashOfConfig":"12"},{"size":1044,"mtime":1613579145051,"results":"18","hashOfConfig":"12"},{"size":2083,"mtime":1613584709374,"results":"19","hashOfConfig":"12"},{"size":1899,"mtime":1613704678745,"results":"20","hashOfConfig":"12"},{"size":1585,"mtime":1613686317400,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1t61bam",{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/App.js",["48","49","50","51","52","53","54","55","56"],"import React, { useState, useEffect, } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { useHistory } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie'\nimport { deadlines, capitalize } from './utilities'\nimport BillBox from './BillBox'\nimport PersonBox from './PersonBox'\nimport moment from 'moment'\nimport { CgSpinner } from 'react-icons/cg'\nimport PlacesAutocomplete from 'react-places-autocomplete';\n\nlet addressTimeout;\nlet searchTimeout;\nfunction App({ scrapedData }) {\n  const [suggestions, setSuggestions] = useState(null)\n  const [address, setAddress] = useState(null)\n  const [searchValue, setSearchValue] = useState('')\n  const [lastModified, setLastModified] = useState(null)\n  const [representatives, setRepresentatives] = useState(null)\n  const [representativesError, setRepresentativesError] = useState(null)\n  const [searchError, setSearchError] = useState(null)\n  const [cookies, setCookie, removeCookie] = useCookies(['following', 'address', 'welcome'])\n\n\n  useEffect(() => {\n    fetch('https://capitoltracker.mountainstatespotlight.org/', {\n      method: 'HEAD'\n    })\n    .then(response => {\n      setLastModified(moment(response.headers.get('last-modified')))\n    })\n  }, []);\n\n\n  const getRepresentatives = (address) => {\n    fetch('https://www.googleapis.com/civicinfo/v2/representatives?key=AIzaSyA6pBuQbIQYtJYBarykcwYzxxmuWULqw4Q&roles=legislatorLowerBody&roles=legislatorUpperBody&roles=headOfGovernment&levels=administrativeArea1&address=' + encodeURIComponent(address))\n      .then(response => response.json())\n      .then(data => {\n        if (data.error) {\n          setRepresentativesError(data.error.message)\n          setRepresentatives([])\n          return\n        }\n        if (!data.divisions) {\n          setRepresentativesError('No information found at this address')\n          setRepresentatives([])\n          return\n        }\n        setRepresentativesError(null)\n        const newRepresentatives = []\n        Object.values(data.divisions).slice(1,3).forEach(district => {\n          district.officeIndices.forEach(officeIdx => {\n            const office = data.offices[officeIdx]\n            office.officialIndices.forEach(idx => {\n              const rep = data.officials[idx]\n              newRepresentatives.push({\n                ...rep, \n                office: office.name,\n                district: district.name.replace('West Virginia State', '').replace('Senate district', '').replace('House district', ''),\n                party: rep.party.replace(' Party', '').replace('Democratic', 'Democrat'),\n                phone: rep.phones.length ? rep.phones[0] : null,\n                email: rep.emails.length ? rep.emails[0] : null,\n                chamber: office.name.includes('Senator') ? 'Senate' : 'House'\n              })\n            })\n          })\n        })\n        if (!newRepresentatives.length) {\n          setRepresentativesError('No information found at this address')\n          setRepresentatives([])\n          return\n        }\n        setRepresentatives(newRepresentatives)\n      })\n  }\n\n  const history = useHistory()\n  \n  let following = (cookies.following || '').split(',')\n  let followingBills = []\n  following.forEach(name => {\n    let found = false\n    scrapedData.bills.forEach(bill => {\n      if (found) return\n      if (name == bill.name) {\n        followingBills.push(bill)\n        found = true\n      }\n    })\n  })\n\n  let nextDeadline = null\n  deadlines.forEach(d => {\n    if (!nextDeadline && d.date > moment()) {\n      nextDeadline = d\n    }\n  })\n  const sessionLength = deadlines[deadlines.length - 1].date.unix() - deadlines[0].date.unix()\n\n  return (\n    <div className=\"App-container\">\n      <div className=\"App-header\">\n        <h1>West Virginia's 2021 Capitol Tracker</h1>\n        <div className=\"byline\">By <a href=\"https://mountainstatespotlight.org/author/lucasmanfield/\">Lucas Manfield</a>, Mountain State Spotlight. {lastModified ? `Data updated ${lastModified.format('MMMM D, YYYY').replace('pm', 'p.m.').replace('am', 'a.m.')}.`: ''}</div>\n        <div className=\"App-intro\">\n          <p>Keeping track of West Virginia's chaotic two months of lawmaking can be daunting. To help you decipher it, our nonprofit investigative newsroom at <a href=\"https://mountainstatespotlight.org\">Mountain State Spotlight</a> is trying something new.</p>\n          <p>Here, you can: get live updates from our reporters as they cover legislators' latest moves; contact your elected representatives; keep tabs on all of the bills you’re following in one place; and look up a bill to find out why it is stuck — or sailing through. The current status of each bill is updated nightly from the legislature's <a href=\"http://www.wvlegislature.gov/\">official website</a>.</p>\n          <p>If you have questions, check out <a href=\"https://mountainstatespotlight.org/2021/02/14/introducing-mountain-state-spotlights-west-virginia-capitol-tracker/\">our guide to the tracker here</a>, or <a href=\"mailto:lucasmanfield@mountainstatespotlight.org\">reach out</a>. We'd love to know what's working and what's not.</p>\n        </div>\n      </div>\n      <div className=\"App-timeline\">\n        <div className=\"App-timeline-line\"></div>\n        <div className=\"App-timeline-today\" style={{\n          left: ((moment(moment().format('YYYY-MM-DD') + ' 00:01:00').unix() - deadlines[0].date.unix()) / sessionLength * 100) + '%'\n        }}>\n          <div className=\"App-timeline-today-label\">Today</div>\n          <div className=\"App-timeline-today-arrow\"></div>\n        </div>\n        {deadlines.map(d => {\n          const fromStart = d.date.unix() - deadlines[0].date.unix()\n          return (\n            <div className=\"App-timeline-deadline\" style={{\n              left: (fromStart / sessionLength * 100) + '%'\n            }} key={d.name}>\n              <div className=\"App-timeline-hoverspot\" />\n              <div className=\"App-timeline-deadline-tooltip\">{d.description}</div>\n              <div className=\"App-timeline-deadline-tooltip-arrow\"></div>\n              <div className=\"App-timeline-deadline-label\" style={{top: (15 + (d.padding || 0)) + 'px'}}><b>{d.date.format('MMM D')}</b> {d.name}</div>\n            </div>\n          )\n        })}\n      </div>\n      <div className=\"App-search-container\">\n        <div className=\"App-search\">\n          <div className=\"App-section-header\">\n            <h2>Look up a bill or representative by name</h2>\n          </div>\n          <Autosuggest\n            suggestions={suggestions || []}\n            onSuggestionsFetchRequested={({ value }) => {\n              let bills = scrapedData.bills.filter(bill => {\n                return bill.title.toLowerCase().includes(value.toLowerCase()) || bill.name.toLowerCase().includes(value.toLowerCase())\n              }).sort((a,b) => {\n                if (a.name == value) {\n                  return -1;\n                }\n                if (a.name.split(' ')[1] == value) {\n                  return -1\n                }\n                return 1\n              })\n              bills.forEach(bill => bill.type = 'bill')\n              let people = scrapedData.people.filter(p => {\n                return p.name.toLowerCase().includes(value.toLowerCase())\n              })\n              people.forEach(p => p.type = 'person')\n              setSuggestions(bills.slice(0, 8).concat(people.slice(0,6)))\n            }}\n            onSuggestionsClearRequested={() => {\n              setSuggestions(null)\n            }}\n            onSuggestionSelected={(e, { suggestion }) => {\n              if (suggestion.type == 'bill') {\n                history.push('/bill/' + suggestion.name)\n              } else {\n                history.push('/person/' + suggestion.name)\n              }\n            }}\n            highlightFirstSuggestion={true}\n            getSuggestionValue={suggestion => suggestion}\n            renderSuggestion={suggestion => (\n                <div className=\"App-suggestion\">\n                  {suggestion.type == 'bill' ? (\n                      <div className=\"App-suggestion-bill\">\n                        <b>{suggestion.name}</b> {suggestion.title || suggestion.party}\n                      </div>\n                    ) : (\n                      <div className=\"App-suggestion-person\">\n                        {suggestion.name}\n                      </div>\n                    )\n                  }\n                  <div className=\"App-suggestion-view\">View</div>\n                </div>\n              )\n            }\n            inputProps={{\n              placeholder: 'e.g. SB 101, Amy Summers',\n              value: searchValue || '',\n              onBlur: (e) => {\n                setSearchError(null)\n              },\n              onChange: (e) => {\n                setSearchValue(e.target.value)\n\n                if (searchTimeout) {\n                  clearTimeout(searchTimeout)\n                }\n                if (!e.target.value || !e.target.value.length) {\n                  setSearchError(null)\n                } else {\n                  setTimeout(() => {\n                    if (searchValue.length && suggestions && !suggestions.length) {\n                      setSearchError('No results found')\n                    }\n                  }, 500)\n                }\n              }\n            }}\n          />\n          {searchError && !suggestions.length ? \n            <div className=\"App-search-error\">\n              {searchError}\n            </div>\n          : ''}\n        </div>\n        <div className=\"App-localrep\">\n          <div className=\"App-section-header\">\n            <h2>Look up your local representatives by address</h2>\n          </div>\n          <PlacesAutocomplete\n            value={address || ''}\n            onChange={address => {\n              setAddress(address)\n              if (!address || !address.length) {\n                setRepresentatives(null)\n              }\n            }}\n            highlightFirstSuggestion={false}\n            onSelect={address => {\n              setAddress(address)\n              setRepresentatives(null)\n              getRepresentatives(address)\n            }}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <div className=\"react-autosuggest__container\">\n                <div className={`App-localrep-searchbutton ${!address || !address.length ? 'disabled' : ''}`} onClick={() => {\n                  setAddress(address)\n                  setRepresentatives(null)\n                  getRepresentatives(address)\n                }}>Search</div>\n                <input\n                  {...getInputProps({\n                    placeholder: '123 Main St, St Albans',\n                    className: 'react-autosuggest__input',\n                  })}\n                />\n                {suggestions && suggestions.length ?\n                <div className=\"react-autosuggest__suggestions-container react-autosuggest__suggestions-container--open \">\n                  <ul className=\"react-autosuggest__suggestions-list\">\n                    {suggestions.map(suggestion => {\n                      const className = suggestion.active\n                        ? 'react-autosuggest__suggestion react-autosuggest__suggestion--highlighted'\n                        : 'react-autosuggest__suggestion';\n\n                      return (\n                        <li\n                          key={suggestion.description}\n                          {...getSuggestionItemProps(suggestion, { className })}\n                        >\n                          {suggestion.description}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n                : ''}\n              </div>\n            )}\n          </PlacesAutocomplete>\n\n          {representatives ? \n            <div className=\"App-representatives\">\n              {representatives.length ?\n                representatives.map(rep => (\n                  <PersonBox {...rep} key={rep.name} />\n                ))\n              : \n                <div className=\"App-representatives-spinner\">\n                {representativesError ?\n                    <span className=\"App-representatives-error\">{representativesError}</span> \n                  :\n                    <CgSpinner />\n                }\n                </div>\n              }\n            </div>\n          : ''}\n        </div>\n      </div>\n      {followingBills.length ?\n        <div className=\"App-section\">\n          <div className=\"App-section-header\">\n            <h2>\n              Bills you are following\n            </h2>\n          </div>\n          <div className=\"App-section-content\">\n            {followingBills.map(bill => (\n              <BillBox {...bill} key={bill.name}/>\n            ))}\n          </div>\n        </div>\n      : ''}\n      <div className=\"App-section\">\n        <div className=\"App-section-header\">\n          <h2>\n            Bills we are following\n          </h2>\n        </div>\n        <div className=\"App-section-content\">\n          {scrapedData.bills.filter(b => b.followingIdx != null).sort((a, b) => a.followingIdx - b.followingIdx).map(bill => (\n            <BillBox {...bill} key={bill.name}/>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/index.js",["57","58","59","60","61","62"],"/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Bill.js",["63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],"import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { getPersonByLastName, capitalize, styleForTag, currencyFormat } from './utilities'\nimport { useCookies } from 'react-cookie'\nimport {\n  useParams,\n  Link,\n} from \"react-router-dom\";\nimport { BsStarFill, BsStar, BsFileText } from 'react-icons/bs';\nimport { FaRegClipboard } from 'react-icons/fa'\nimport { RiExternalLinkLine } from 'react-icons/ri';\nimport PersonBox from './PersonBox'\nimport moment from 'moment'\nimport { useHistory } from \"react-router-dom\";\nimport showdown from 'showdown'\n\nvar markdownConverter = new showdown.Converter()\n\nfunction Bill({ scrapedData }) {\n  const { name } = useParams();\n  const [bill, setBill] = useState(null)\n  const [cookies, setCookie, removeCookie] = useCookies(['following', 'address'])\n  let laidOut = false\n\n  const history = useHistory()\n\n  useEffect(() => {\n    scrapedData.bills.forEach(bill => {\n      if (bill.name == name) {\n        setBill(bill)\n      }\n    })\n  }, [name]);\n\n  useLayoutEffect(() => {\n    if (!laidOut && bill) {\n      if (window.twttr.widgets) {\n        window.twttr.widgets.load()\n      }\n      laidOut = true\n    }\n  })\n\n  if (!bill) {\n    return <div />\n  }\n\n  const isFollowing = (cookies.following || '').split(',').includes(name)\n\n  console.log(bill)\n\n  const statusBox = (\n    <div className='Bill-statusbar-status'>\n      <div className='Bill-statusbar-status-name'>{bill.status.step == 'committee' ? `In committee` : capitalize(bill.status.step)}</div>\n      <div className='Bill-statusbar-status-date'>{bill.status.step == 'committee' ? 'Since' : ''} {bill.last_update_parsed.format('MMM D')}</div>\n    </div>\n  )\n\n  const versionNames = [\n    'Introduced Version',\n    'Committee Substitute',\n    'Engrossed Version',\n    'Engrossed Committee Substitute',\n    'Enrolled Committee Substitute',\n    'Signed Enrolled Version'\n  ]\n  const versions = bill.versions.sort((a, b) => versionNames.indexOf(b.name) - versionNames.indexOf(a.name))\n\n  return (\n    <div className=\"Bill-container\">\n      <div className='Bill-nav'>\n        <div className=\"Bill-breadcrumbs\">\n          <Link to=\"/\">Search</Link><b>&nbsp;&nbsp;»&nbsp;&nbsp;{name}</b>\n        </div>\n        <div className=\"Bill-buttons\">\n          {bill.agendas.length ?\n            <a onClick={e => e.stopPropagation()} href={bill.agendas[0].url} target=\"_blank\"><FaRegClipboard /> View Agenda</a>\n          : ''}\n          <a target=\"_blank\" href={versions[0]['url']}><BsFileText /> Read Text</a>\n          <button className={`Bill-follow ${isFollowing ? 'Bill-following' : ''}`} onClick={() => {\n            if (isFollowing) {\n              setCookie('following', (cookies.following || '').replace(`${name},`, ''))\n            } else {\n              setCookie('following', `${cookies.following || ''}${name},`)\n            }\n          }}>\n            {isFollowing ? <BsStarFill /> : <BsStar />} {isFollowing ? 'Following' : 'Follow'}\n          </button>\n        </div>\n      </div>\n      <div className=\"Bill-header\">\n        <div className=\"Bill-title\">{bill.title}</div>\n        <div className=\"Bill-subjects\">\n          \n          {(bill.tags || []).map(tag => (\n            <div key={tag} className=\"Tag\" style={styleForTag(tag)}>{tag}</div>\n          ))}\n        </div>\n        <div className=\"Bill-url\">\n          Source:&nbsp;&nbsp;<a href={bill.url} target=\"_blank\">West Virginia Legislature <RiExternalLinkLine /></a>\n        </div>\n      </div>\n      <div className=\"Bill-statusbar\">\n        <div className=\"Bill-statusbar-group\">\n          <div className=\"Bill-statusbar-group-name\">{bill.name.includes('HB') ? 'House' : 'Senate'}</div>\n        </div>\n        <div className=\"Bill-statusbar-group\" style={{left: '42%'}}>\n          <div className=\"Bill-statusbar-group-name\">{bill.name.includes('HB') ? 'Senate' : 'House'}</div>\n        </div>\n        <div className=\"Bill-statusbar-group\" style={{left: '80.5%', width: '14%'}}>\n          <div className=\"Bill-statusbar-group-name\">Governor</div>\n        </div>\n        <div className=\"Bill-statusbar-segment\">\n          {bill.step < 2 ? statusBox : ''}\n          <div className={`Bill-statusbar-dot ${bill.step >= 1 ? 'active' : ''}`} />\n          <div className={`Bill-statusbar-line ${bill.step >= 2 ? 'active' : ''}`} />\n        </div>\n        <div className=\"Bill-statusbar-segment\">\n          {bill.step >= 2 && bill.step < 5 ? statusBox : ''}\n          <div className={`Bill-statusbar-dot ${bill.step >= 2 ? 'active' : ''}`} />\n          <div className={`Bill-statusbar-line ${bill.step >= 5 ? 'active' : ''}`} />\n        </div>\n        <div className=\"Bill-statusbar-segment Bill-statusbar-segment-long\">\n          {bill.step == 5 ? statusBox: ''}\n          <div className={`Bill-statusbar-dot ${bill.step >= 5 ? 'active' : ''}`} />\n          <div className={`Bill-statusbar-line ${bill.step >= 5 ? 'active' : ''}`} />\n        </div>\n        <div className=\"Bill-statusbar-segment\">\n          {bill.step == 6 ? statusBox: ''}\n          <div className={`Bill-statusbar-dot ${bill.step >= 6 ? 'active' : ''}`} />\n          <div className={`Bill-statusbar-line ${bill.step >= 7 ? 'active' : ''}`} />\n        </div>\n        <div className=\"Bill-statusbar-segment\">\n          {bill.step > 6 && bill.step < 10 ? statusBox : ''}\n          <div className={`Bill-statusbar-dot ${bill.step >= 7 ? 'active' : ''}`} />\n          <div className={`Bill-statusbar-line ${bill.step >= 10 ? 'active' : ''}`} />\n        </div>\n        <div className=\"Bill-statusbar-segment Bill-statusbar-segment-long\">\n          {bill.step == 10 ? statusBox : ''}\n          <div className={`Bill-statusbar-dot ${bill.step >= 10 ? 'active' : ''}`} />\n          <div className={`Bill-statusbar-line ${bill.step >= 11 ? 'active' : ''}`} />\n        </div>\n        <div className=\"Bill-statusbar-segment\">\n          {bill.step >= 11 ? statusBox : ''}\n          <div className={`Bill-statusbar-dot ${bill.step == 12 ? 'active' : ''}`} />\n        </div>\n      </div>\n      <div className=\"Bill-content\">\n        <div className=\"Bill-details\">\n          {bill.status.committee && bill.status.committee.length ?\n            <div className=\"Bill-detail-item\">\n              <div className=\"Bill-detail-item-header\">Committee</div>\n              <div className=\"Bill-detail-item-content\">\n                <a href={`/committee/${bill.status.chamber}/${bill.status.committee}`}>{capitalize(bill.status.chamber)} {bill.status.committee}</a>\n              </div>\n            </div>\n          : ''}\n          {bill.subjects.length ?\n            <div className=\"Bill-detail-item\">\n              <div className=\"Bill-detail-item-header\">Subject</div>\n              <div className=\"Bill-detail-item-content\">\n                {bill.subjects.map((subject, idx) => (\n                  <span>\n                    <Link key={subject} to={`/subject/${subject}`}>{subject}</Link>\n                    {idx < bill.subjects.length - 1 ? ', ' : ''}  \n                  </span>\n                ))}\n              </div>\n            </div>\n          : ''}\n          {bill.fiscal_note && 'annual_cost' in bill.fiscal_note ? \n            <div className=\"Bill-detail-item\">\n              <div className=\"Bill-detail-item-header\">Projected Fiscal Impact</div>\n              <div className=\"Bill-detail-item-content\">\n                {currencyFormat(bill.fiscal_note.annual_revenue - bill.fiscal_note.annual_cost)} per year\n                <div className=\"Bill-fiscal-note\">\n                  Source: &nbsp;&nbsp;<a href={bill.fiscal_note.url} target=\"_blank\">{bill.fiscal_note.agency} <RiExternalLinkLine /></a>\n                </div>\n              </div>\n            </div>\n          : ''}\n          {bill.similar_to ?\n            <div className=\"Bill-detail-item\">\n              <div className=\"Bill-detail-item-header\">Similar To</div>\n              <div className=\"Bill-detail-item-content\">\n                <Link to={`/bill/${bill.similar_to}`}>{bill.similar_to}</Link>\n              </div>\n            </div>\n          : ''}\n        </div>\n        {bill.amendments.length ?\n          <div>\n            <div className=\"Bill-section-header\">Amendments</div>\n            <div className=\"Bill-section Bill-amendments\">\n              {bill.amendments.map(amendment => {\n                return (\n                  <a className=\"Bill-amendment\" href={amendment.url} target=\"_blank\">\n                    <div className=\"Bill-amendment-sponsors\">\n                      {amendment.sponsors.map(s => capitalize(s)).join(', ')}\n                    </div>\n                    <div className=\"Bill-amendment-status\">\n                    {capitalize(amendment.type.substring(0,1)) == 'H' ? 'House' : 'Senate'}, {capitalize(amendment.status)}\n                    </div>\n                  </a>\n                )\n              })}\n            </div>\n          </div>\n        : ''}\n        <div className=\"Bill-section-header\">Sponsors</div>\n        <div className=\"Bill-section Bill-sponsors\">\n          <div className=\"Bill-sponsors-container\" style={{width: bill.sponsors.length * 232 + 'px'}}>\n            {bill.sponsors.map(sponsor => {\n              const person = getPersonByLastName(scrapedData.people, sponsor.name)\n              if (!person) {\n                return <span className=\"Bill-sponsor\" key={sponsor.name}>{sponsor.name}</span>\n              }\n\n              return (\n                <PersonBox {...person} tag={sponsor.classification == 'primary' ? 'Lead Sponsor' : null} key={person.name}/>\n              )\n            })}\n          </div>\n        </div>\n        {(bill.dispatches || []).length ?\n        <div>\n          <div className=\"Bill-section-header\">Updates</div>\n          <div className=\"Bill-dispatches Bill-section\">\n            {bill.dispatches.sort((a,b) => moment(b.date).unix() - moment(a.date).unix()).map(dispatch => (\n              <div key={dispatch.date} className=\"Bill-dispatch\">\n                <div className=\"Bill-dispatch-header\">\n                  {dispatch.tag && dispatch.tag.length ?\n                    <div className=\"Bill-dispatch-tags\">\n                      <div key={dispatch.tag} className=\"Tag\" style={styleForTag(dispatch.tag)}>{dispatch.tag}</div>\n                    </div>\n                  : ''}\n                  <span className=\"Bill-dispatch-header-date\">{capitalize(moment(dispatch.date).format('MMM D, h:mm a'))}</span> — {dispatch.reporter}\n                </div>\n                <div className=\"Bill-dispatch-content\" dangerouslySetInnerHTML={{__html: markdownConverter.makeHtml(dispatch.content)}} />\n              </div>\n            ))}\n          </div>\n        </div>\n        : ''}\n      </div>\n    </div>\n  );\n}\n\nexport default Bill;\n","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Person.js",["81","82","83"],"import React, { useState, useEffect } from 'react';\nimport {\n  useParams,\n  Link,\n} from \"react-router-dom\";\nimport { matchNameByLastName, roleToNumber } from './utilities'\nimport BillBox from './BillBox'\nimport { RiExternalLinkLine } from 'react-icons/ri';\nimport { MdPhone, MdEmail } from 'react-icons/md';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Person({ scrapedData, loaded }) {\n  const { name } = useParams();\n  const [person, setPerson] = useState(null)\n  const [bills, setBills] = useState(null)\n\n  const history = useHistory()\n\n  useEffect(() => {\n    scrapedData.people.forEach(p => {\n      if (p.name === name) {\n        setPerson(p)\n      }\n    })\n    \n    if (loaded) {\n      const tempBills = []\n      scrapedData.bills.forEach(b => {\n        b.sponsors.forEach(s => {\n          if (matchNameByLastName(name, s.name)) {\n            tempBills.push(b)\n          }\n        })\n      })\n      const sortedBills = tempBills.sort((a,b) => b.last_update_parsed - a.last_update_parsed)\n      setBills(sortedBills)\n    }\n  }, [scrapedData, name, loaded]);\n\n  if (!person) {\n    return <div />\n  }\n\n  console.log(person)\n\n  return (\n    <div className=\"Person-container\">\n      <div className=\"Person-breadcrumbs\">\n        <Link to=\"/\">Search</Link>&nbsp;&nbsp;»&nbsp;&nbsp;{person.name}\n      </div>\n      <div className=\"Person-header\">\n        <img src={person.photo}/>\n        <div className=\"Person-header-details\">\n          <div className=\"Person-name\">{person.name} ({person.party[0]} - {person.district_name})</div>\n          <div className=\"Person-office\">{person.chamber == 'house' ? 'Delegate' : 'Senator'}, District {person.district}</div>\n          {person.positions.length ? \n            <div className=\"Person-positions\">\n              {person.positions.map(position => (\n                <div className=\"Person-position\">{position}</div>\n              ))}\n            </div>\n          : ''}\n          <div className=\"Person-contact\">\n            {person.email ? <a href={`mailto:${person.email}`}><MdEmail /> {person.email}</a> : ''}\n            {person.phone ? <a href={`tel:${person.phone}`}><MdPhone/> {person.phone}</a> : ''}\n          </div>\n          <div className=\"Person-url\">\n            Source:&nbsp;&nbsp;<a href={person.url} target=\"_blank\">West Virginia Legislature <RiExternalLinkLine /></a>\n          </div>\n        </div>\n      </div>\n      <div className=\"Person-content\">\n        {(person.committees || []).length ?\n          <div>\n            <div className=\"Person-section-header\">Committees</div>\n            <div className=\"Person-committees-container\">\n              <div className=\"Person-committees\">\n                {person.committees.sort((a,b) => roleToNumber(b.role) - roleToNumber(a.role)).map(committee => (\n                  <div className=\"Person-committee\" key={committee.name} onClick={() => history.push(`/committee/${person.chamber.toLowerCase()}/${committee.name}`)}>\n                    <div className=\"Person-committee-name\">{committee.name}</div>\n                    <div className=\"Person-committee-role\">{committee.role}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        : ''}\n        {bills ?\n          <div>\n            <div className=\"Person-section-header\">Sponsored Bills</div>\n            <div className=\"Person-bills\">\n              {bills.map(bill => (\n                <BillBox {...bill} key={bill.name} />\n              ))}\n            </div>\n          </div>\n        : ''}\n      </div>\n    </div>\n  );\n}\n\nexport default Person;\n","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/utilities.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"import moment from 'moment'\n\nexport function matchNameByLastName(name, lastname) {\n  let lastName = lastname\n  const n = lastName.indexOf('(')\n  if (n != -1) {\n    \n    lastName = lastName.substring(0, n - 1)\n  }\n  \n  let firstInitial = null\n  let lastNameSplit0 = null\n  const lastNames = lastName.split(' ')\n  if (lastNames.length >= 2) {\n    lastNameSplit0 = lastNames[0].replace(',','')\n    firstInitial = lastNames[1][0]\n  }\n  const names = name.split(' ')\n\n  if (firstInitial) {\n    if (names[names.length - 1] === lastNameSplit0 && names[0][0] == firstInitial) {\n      return true\n    }\n    return false\n  }\n  if (names.length > 2 && names[names.length - 2] === lastName) {\n    return true\n  }\n  if (names[names.length - 1] === lastName) {\n    return true\n  }\n\n  return false\n}\n\nexport function getPersonByLastName(people, lastname) {\n  let output = null\n  people.forEach(person => {\n    if (matchNameByLastName(person.name, lastname)) {\n      output = person\n    }\n  })\n  return output\n}\n\nexport function styleForTag(tag) {\n  if (tag === 'Sponsored by leadership') {\n    return {background: '#fff2ef'}\n  }\n  if (tag === 'Too many committees') {\n    return {background: '#fff2ef'}\n  }\n  if (tag === 'Major support') {\n    return {background: '#9bffb1'}\n  }\n  return {background: 'white', border: '1px solid black'}\n}\n\nexport function updateBillStatus(bill) {\n  bill.last_update_parsed = moment(bill.status.last_action_date)\n  if (bill.status.step == 'signed') {\n    bill.step = 12;\n  } if (bill.status.step == 'passed') {\n    bill.step = 10;\n  } else if (bill.status.step.toLowerCase() == 'committee') {\n    bill.step = 6\n    if (bill.name.includes('HB') && bill.status.chamber == 'house') {\n      bill.step = 1\n    }\n    if (bill.name.includes('SB') && bill.status.chamber == 'senate') {\n      bill.step = 1\n    }\n  } else if (bill.status.step.toLowerCase() == '1st reading') {\n    bill.step = 7\n    if (bill.name.includes('HB') && bill.status.chamber == 'house') {\n      bill.step = 2\n    }\n    if (bill.name.includes('SB') && bill.status.chamber == 'senate') {\n      bill.step = 2\n    }\n  } else if (bill.status.step.toLowerCase() == '2nd reading') {\n    bill.step = 8\n    if (bill.name.includes('HB') && bill.status.chamber == 'house') {\n      bill.step = 3\n    }\n    if (bill.name.includes('SB') && bill.status.chamber == 'senate') {\n      bill.step = 3\n    }\n  } else if (bill.status.step.toLowerCase() == '3rd reading') {\n    bill.step = 9\n    if (bill.name.includes('HB') && bill.status.chamber == 'house') {\n      bill.step = 4\n    }\n    if (bill.name.includes('SB') && bill.status.chamber == 'senate') {\n      bill.step = 4\n    }\n  } else if (bill.status.step.includes('senate introduction')) {\n    bill.step = 5\n    bill.status.step = 'To Senate'\n  } else if (bill.status.step.includes('house introduction')) {\n    bill.step = 5\n    bill.status.step = 'To House'\n  }\n}\n\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nexport const deadlines = [\n  {\n    date: moment('2/10/21'),\n    name: 'First Day',\n    prose: 'the first day of the session',\n    description: \"Bills can be introduced.\"\n  },\n  {\n    date: moment('3/16/21'),\n    name: 'House Deadline',\n    prose: 'the last day to introduce bills in the house',\n    description: \"Last day to introduce bills in the House.\"\n  },\n  {\n    date: moment('3/22/21'),\n    name: 'Senate Deadline',\n    prose: 'the last day to introduce bills in the senate',\n    padding: 15,\n    description: \"Last day to introduce bills in the Senate.\"\n  },\n  {\n    date: moment('3/28/21'),\n    name: 'Committee Deadline',\n    prose: 'the last day for bills to emerge from committee',\n    padding: 30,\n    description: \"Bills due out of committee.\"\n  },\n  {\n    date: moment('3/31/21'),\n    name: 'Crossover Day',\n    prose: 'the last day to consider bills on the floor',\n    padding: 45,\n    description: \"Last day for a bill to pass in its chamber of origin.\"\n  },\n  {\n    date: moment('4/10/21'),\n    name: 'Final Day',\n    prose: 'the last day of the session',\n    description: \"Deadline for passage is midnight on the sixtieth day of the session.\"\n  }\n]\n\nexport function roleToNumber(role) {\n  if (role == 'Chair') {\n    return 3;\n  }\n  if (role == 'Vice Chair') {\n    return 2;\n  }\n  if (role == 'Member') {\n    return 1;\n  }\n  return 0;\n}\n\nexport function currencyFormat(num) {\n  return '$' + num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}","/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Subject.js",["103","104"],"import React, { useState, useEffect } from 'react';\nimport {\n  useParams,\n  Link,\n} from \"react-router-dom\";\nimport BillBox from './BillBox'\n\nfunction Subject({ scrapedData }) {\n  const { name } = useParams();\n\n  return (\n    <div className=\"Subject-container\">\n      <div className=\"Subject-breadcrumbs\">\n        <Link to=\"/\">Search</Link>&nbsp;&nbsp;»&nbsp;&nbsp;{name}\n      </div>\n      <div className=\"Subject-content\">\n        {scrapedData.bills.filter(b => b.subjects.includes(name)).map(bill => (\n          <BillBox {...bill} key={bill.name} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Subject;\n",["105","106"],"/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/PersonBox.js",["107"],"/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/BillBox.js",["108","109","110","111"],"/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Committee.js",["112","113","114","115","116","117","118","119","120","121","122"],"/Users/lucas/Documents/GitHub/wv-bill-tracker/app/src/Agenda.js",["123","124","125","126"],{"ruleId":"127","severity":1,"message":"128","line":5,"column":21,"nodeType":"129","messageId":"130","endLine":5,"endColumn":31},{"ruleId":"127","severity":1,"message":"131","line":12,"column":5,"nodeType":"129","messageId":"130","endLine":12,"endColumn":19},{"ruleId":"127","severity":1,"message":"132","line":22,"column":19,"nodeType":"129","messageId":"130","endLine":22,"endColumn":28},{"ruleId":"127","severity":1,"message":"133","line":22,"column":30,"nodeType":"129","messageId":"130","endLine":22,"endColumn":42},{"ruleId":"134","severity":1,"message":"135","line":85,"column":16,"nodeType":"136","messageId":"137","endLine":85,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":144,"column":28,"nodeType":"136","messageId":"137","endLine":144,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":147,"column":42,"nodeType":"136","messageId":"137","endLine":147,"endColumn":44},{"ruleId":"134","severity":1,"message":"135","line":163,"column":35,"nodeType":"136","messageId":"137","endLine":163,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":173,"column":36,"nodeType":"136","messageId":"137","endLine":173,"endColumn":38},{"ruleId":"138","severity":1,"message":"139","line":85,"column":13,"nodeType":"140","endLine":110,"endColumn":4},{"ruleId":"134","severity":1,"message":"135","line":90,"column":27,"nodeType":"136","messageId":"137","endLine":90,"endColumn":29},{"ruleId":"134","severity":1,"message":"135","line":99,"column":27,"nodeType":"136","messageId":"137","endLine":99,"endColumn":29},{"ruleId":"138","severity":1,"message":"141","line":110,"column":6,"nodeType":"142","endLine":110,"endColumn":8,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":116,"column":56,"nodeType":"146","endLine":116,"endColumn":98},{"ruleId":"147","severity":1,"message":"148","line":124,"column":150,"nodeType":"149","endLine":124,"endColumn":165},{"ruleId":"127","severity":1,"message":"133","line":21,"column":30,"nodeType":"129","messageId":"130","endLine":21,"endColumn":42},{"ruleId":"127","severity":1,"message":"150","line":24,"column":9,"nodeType":"129","messageId":"130","endLine":24,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":28,"column":21,"nodeType":"136","messageId":"137","endLine":28,"endColumn":23},{"ruleId":"138","severity":1,"message":"151","line":32,"column":6,"nodeType":"142","endLine":32,"endColumn":12,"suggestions":"152"},{"ruleId":"138","severity":1,"message":"153","line":39,"column":17,"nodeType":"154","endLine":39,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":53,"column":69,"nodeType":"136","messageId":"137","endLine":53,"endColumn":71},{"ruleId":"134","severity":1,"message":"135","line":54,"column":69,"nodeType":"136","messageId":"137","endLine":54,"endColumn":71},{"ruleId":"147","severity":1,"message":"148","line":76,"column":78,"nodeType":"149","endLine":76,"endColumn":93},{"ruleId":"147","severity":1,"message":"148","line":78,"column":14,"nodeType":"149","endLine":78,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":99,"column":49,"nodeType":"149","endLine":99,"endColumn":64},{"ruleId":"134","severity":1,"message":"135","line":123,"column":22,"nodeType":"136","messageId":"137","endLine":123,"endColumn":24},{"ruleId":"134","severity":1,"message":"135","line":128,"column":22,"nodeType":"136","messageId":"137","endLine":128,"endColumn":24},{"ruleId":"134","severity":1,"message":"135","line":138,"column":22,"nodeType":"136","messageId":"137","endLine":138,"endColumn":24},{"ruleId":"134","severity":1,"message":"135","line":144,"column":59,"nodeType":"136","messageId":"137","endLine":144,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":176,"column":70,"nodeType":"149","endLine":176,"endColumn":85},{"ruleId":"147","severity":1,"message":"148","line":196,"column":70,"nodeType":"149","endLine":196,"endColumn":85},{"ruleId":"134","severity":1,"message":"135","line":201,"column":64,"nodeType":"136","messageId":"137","endLine":201,"endColumn":66},{"ruleId":"134","severity":1,"message":"135","line":219,"column":68,"nodeType":"136","messageId":"137","endLine":219,"endColumn":70},{"ruleId":"144","severity":1,"message":"145","line":52,"column":9,"nodeType":"146","endLine":52,"endColumn":34},{"ruleId":"134","severity":1,"message":"135","line":55,"column":58,"nodeType":"136","messageId":"137","endLine":55,"endColumn":60},{"ruleId":"147","severity":1,"message":"148","line":68,"column":53,"nodeType":"149","endLine":68,"endColumn":68},{"ruleId":"134","severity":1,"message":"155","line":6,"column":9,"nodeType":"136","messageId":"137","endLine":6,"endColumn":11},{"ruleId":"134","severity":1,"message":"135","line":21,"column":67,"nodeType":"136","messageId":"137","endLine":21,"endColumn":69},{"ruleId":"134","severity":1,"message":"135","line":61,"column":24,"nodeType":"136","messageId":"137","endLine":61,"endColumn":26},{"ruleId":"134","severity":1,"message":"135","line":63,"column":26,"nodeType":"136","messageId":"137","endLine":63,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":65,"column":45,"nodeType":"136","messageId":"137","endLine":65,"endColumn":47},{"ruleId":"134","severity":1,"message":"135","line":67,"column":57,"nodeType":"136","messageId":"137","endLine":67,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":70,"column":57,"nodeType":"136","messageId":"137","endLine":70,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":73,"column":45,"nodeType":"136","messageId":"137","endLine":73,"endColumn":47},{"ruleId":"134","severity":1,"message":"135","line":75,"column":57,"nodeType":"136","messageId":"137","endLine":75,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":78,"column":57,"nodeType":"136","messageId":"137","endLine":78,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":81,"column":45,"nodeType":"136","messageId":"137","endLine":81,"endColumn":47},{"ruleId":"134","severity":1,"message":"135","line":83,"column":57,"nodeType":"136","messageId":"137","endLine":83,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":86,"column":57,"nodeType":"136","messageId":"137","endLine":86,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":89,"column":45,"nodeType":"136","messageId":"137","endLine":89,"endColumn":47},{"ruleId":"134","severity":1,"message":"135","line":91,"column":57,"nodeType":"136","messageId":"137","endLine":91,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":94,"column":57,"nodeType":"136","messageId":"137","endLine":94,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":153,"column":12,"nodeType":"136","messageId":"137","endLine":153,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":156,"column":12,"nodeType":"136","messageId":"137","endLine":156,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":159,"column":12,"nodeType":"136","messageId":"137","endLine":159,"endColumn":14},{"ruleId":"127","severity":1,"message":"156","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"157","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"134","severity":1,"message":"135","line":18,"column":18,"nodeType":"136","messageId":"137","endLine":18,"endColumn":20},{"ruleId":"127","severity":1,"message":"162","line":2,"column":22,"nodeType":"129","messageId":"130","endLine":2,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":18,"column":100,"nodeType":"149","endLine":18,"endColumn":115},{"ruleId":"134","severity":1,"message":"135","line":18,"column":133,"nodeType":"136","messageId":"137","endLine":18,"endColumn":135},{"ruleId":"134","severity":1,"message":"135","line":42,"column":61,"nodeType":"136","messageId":"137","endLine":42,"endColumn":63},{"ruleId":"127","severity":1,"message":"156","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"157","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"163","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":17},{"ruleId":"127","severity":1,"message":"164","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":15,"column":66,"nodeType":"136","messageId":"137","endLine":15,"endColumn":68},{"ruleId":"134","severity":1,"message":"135","line":15,"column":94,"nodeType":"136","messageId":"137","endLine":15,"endColumn":96},{"ruleId":"134","severity":1,"message":"135","line":31,"column":72,"nodeType":"136","messageId":"137","endLine":31,"endColumn":74},{"ruleId":"134","severity":1,"message":"135","line":31,"column":126,"nodeType":"136","messageId":"137","endLine":31,"endColumn":128},{"ruleId":"134","severity":1,"message":"135","line":36,"column":24,"nodeType":"136","messageId":"137","endLine":36,"endColumn":26},{"ruleId":"134","severity":1,"message":"135","line":36,"column":43,"nodeType":"136","messageId":"137","endLine":36,"endColumn":45},{"ruleId":"134","severity":1,"message":"135","line":41,"column":36,"nodeType":"136","messageId":"137","endLine":41,"endColumn":38},{"ruleId":"127","severity":1,"message":"128","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":18,"column":44,"nodeType":"149","endLine":18,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":25,"column":24,"nodeType":"136","messageId":"137","endLine":25,"endColumn":26},{"ruleId":"165","severity":1,"message":"166","line":30,"column":13,"nodeType":"167","messageId":"168","endLine":30,"endColumn":19},"no-unused-vars","'capitalize' is defined but never used.","Identifier","unusedVar","'addressTimeout' is defined but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'joinAirtable' and 'scrapedData.bills'. Either include them or remove the dependency array.","ArrayExpression",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'scrapedData.bills'. Either include it or remove the dependency array.",["170"],"Assignments to the 'laidOut' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Literal","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["171"],"no-negated-in-lhs",["172"],"'Link' is defined but never used.","'BsPower' is defined but never used.","'Person' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [joinAirtable, scrapedData.bills]",{"range":"177","text":"178"},"Update the dependencies array to be: [name, scrapedData.bills]",{"range":"179","text":"180"},[3241,3243],"[joinAirtable, scrapedData.bills]",[995,1001],"[name, scrapedData.bills]"]